<?xml version="1.0" encoding="utf-8"?>
<rss version='2.0' xmlns:admin='http://webns.net/mvcb/' xmlns:content='http://purl.org/rss/1.0/modules/content/' xmlns:dc='http://purl.org/dc/elements/1.1/' xmlns:rdf='http://www.w3.org/1999/02/22-rdf-syntax-ns#' xmlns:sy='http://purl.org/rss/1.0/modules/syndication/'>
<channel>
<title>Rico Sta Cruz.com</title>
<link>http://ricostacruz.com</link>
<description></description>
<dc:language>en</dc:language>
<dc:rights>Copyright 2010</dc:rights>
<pubDate>Mon, 30 Jul 2012 09:54:46 +0800</pubDate>
<item>
<title>Philippine Graphic Design Awards 2011</title>
<link>http://ricostacruz.com/2011/pgda.html</link>
<description>
<![CDATA[<p><img src="http://ricostacruz.com/images/pgda2011.png" alt="" /></p>
<div class='c1 info'>
<p><strong>I will be judging in the <a href="http://pgdawards.com"><span class="caps">PGDA</span>.</a></strong> Do send in your entries! There are 13 categories, open to students and professionals alike.</p>
<p>You can submit entries until September 20. All the relevant details are available on their website.</p>
<p>The <span class="caps">PGDA</span> has been around for a few years now. Check out the great work from <a href="http://pgdawards.com/2010_Winners/">last year&#8217;s winners.</a></p>
</div>
<div class='c1 right'>
<p class="link"><a href="http://pgdawards.com"><span class="caps">PGDA</span> website</a></p>
<p class="link"><a href="http://pgdawards.com/rules-for-entry.com">Contest details</a></p>
</div>]]>
</description>
<pubDate>Mon, 25 Jul 2011 00:00:00 +0000</pubDate>
</item>
<item>
<title>Killing orphans</title>
<link>http://ricostacruz.com/2011/unorphan.html</link>
<description>
<![CDATA[<div class='c1'>
<p><strong>Paragraphs with single words</strong> in the end are ugly. Live by this rule in the web and print. These words are called <em><a href="http://en.wikipedia.org/wiki/Widows_and_orphans">orphans</a></em>.</p>
<p>I&#8217;ve just put together a one-off JQuery plugin to fix the problem of text orphans. Check out <a href="http://github.com/rstacruz/jquery.unorphan">jQuery Unorphan</a> for a quick, elegant solution.</p>
<p class="brief"><a href="http://github.com/rstacruz/jquery.unorphan">Unorphan for jQuery &rarr;</a></p>
</div>]]>
</description>
<pubDate>Thu, 21 Jul 2011 00:00:00 +0000</pubDate>
</item>
<item>
<title>HAML and IE compatibility</title>
<link>http://ricostacruz.com/2010/haml_and_ie_compatibility.html</link>
<description>
<![CDATA[<p class="brief c3">I love <span class="caps">HAML</span>, and I love the insanely-elegant <a href="http://paulirish.com/2008/conditional-stylesheets-vs-css-hacks-answer-neither/">Paul Irish IE conditional comments trick</a> (not hack!). But can we use them together? For those that tried, I&#8217;m sure you know by now that trying to shoehorn the whole snippet as a bunch of <span class="caps">HAML</span> comments is just gross, and impossible.</p>
<section class="flush">
<p><img src="http://ricostacruz.com/images/cc_ie_html.png" alt="" /></p>
<div class="caption c1">
<p><strong>Figure 1</strong>.<br />
IE conditional comments allows you to target IE versions easily without any hacks. More info in <a href="http://paulirish.com/2008/conditional-stylesheets-vs-css-hacks-answer-neither/">Paul Irish&#8217;s post</a></p>
</div>
</section>
<section class="pt2 nb main">
<div class="c c1">
<h3>Implementing conditional comments: the helpers way</h3>
<p>The solution isn&#8217;t that hard to accomplish! <span class="caps">HAML</span> lets you have helper functions that take in blocks which you can receive in your helper functions as <span class="caps">HTML</span>. I suppose we just put two and two together, and:</p>
</div>
<pre class="c2 fr prettyprint lang-rb">
module ConditionalHtmlHelper
  # Implements the Paul Irish IE conditional comments HTML tag--in HAML.
  # http://paulirish.com/2008/conditional-stylesheets-vs-css-hacks-answer-neither/
  def cc_html(options={}, &amp;blk)
    attrs = options.map { |(k, v)| " #{h k}='#{h v}'" }.join('')
    [ "&lt;!--[if lt IE 7 ]&gt; &lt;html#{attrs} class='ie6'&gt; &lt;![endif]--&gt;",
      "&lt;!--[if IE 7 ]&gt;    &lt;html#{attrs} class='ie7'&gt; &lt;![endif]--&gt;",
      "&lt;!--[if IE 8 ]&gt;    &lt;html#{attrs} class='ie8'&gt; &lt;![endif]--&gt;",
      "&lt;!--[if IE 9 ]&gt;    &lt;html#{attrs} class='ie9'&gt; &lt;![endif]--&gt;",
      "&lt;!--[if (gt IE 9)|!(IE)]&gt;&lt;!--&gt; &lt;html#{attrs}&gt; &lt;!--&lt;![endif]--&gt;",
      capture_haml(&amp;blk).strip,
      "&lt;/html&gt;"
    ].join("\n")
  end

  def h(str); Rack::Utils.escape_html(str); end
end

# Assuming Main is your Sinatra app
Main.helpers ConditionalHtmlHelper
</pre>
<div class="c c1">
<h3>Usage in <span class="caps">HAML</span></h3>
<p>Now in your <span class="caps">HAML</span> layouts, instead of using <code>%html</code>, use the new helper like so:</p>
</div>
<pre class="c2 fr prettyprint lang-rb">
!!! 5
!= cc_html(:lang =&gt; 'en') do
  %head
    %meta(charset='UTF-8')
    %title Hello!

  %body
    ...
</pre>
</section>
<section class="alert">
<div class="c1">
<h3>Oh, and one more thing&#8230;</h3>
<p>This will make it dirt easy to implement IE-specific stuff in <span class="caps">SCSS</span>. Thanks to <a href="http://twitter.com/marcopalinar">@marcopalinar</a> for the tip.</p>
</div>
<pre class="c1 prettyprint lang-css">
/* Fix the double margin bug */
.posts {
    margin-left: 10px;
    .ie6 &amp; { margin-left: 5px; }
}
</pre>

<pre class="c1 prettyprint lang-css">
/* Upgrade notice */
.upgrade-your-browser {
  &amp; { display: none; }
  .ie6 &amp; { display: block; }
}
</pre>
</section>
<h3 class="c c2">That&#8217;s it!</h3>
<p class="c c2">Aura now has all it&#8217;s views peppered with the conditional comments trick. Still no IE compatibility, though&#8230; that&#8217;ll come later. By the way, there may be a better solution <a href="https://gist.github.com/636041">here</a>. As usual, you can check the demo site at <a href="http://aurademo.heroku.com">aurademo.heroku.com</a>.</p>]]>
</description>
<pubDate>Sun, 10 Oct 2010 00:00:00 +0000</pubDate>
</item>
</channel>
</rss>
